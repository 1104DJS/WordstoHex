// Kata.EncryptThis("Hello") == "72olle"
// Kata.EncryptThis("good") == "103doo"
// Kata.EncryptThis("hello world") == "104olle 119drlo"

using System.Text;
using System.Text.RegularExpressions;

Console.WriteLine(EncryptThis("Hello"));//, "72olle"));
Console.WriteLine(EncryptThis(""));


//Console.WriteLine(EncryptThis("hello world"));
//Console.WriteLine(EncryptThis("good"));
//Console.WriteLine(DecryptThis("72olle"));

static string EncryptThis(string input) //, string input2 = "")
{
    string[] wordsArr = input.Split(' ');
    //string[] wordsArr2 = input2.Split(' ');
    string[] strList = new string[wordsArr.Length];
    // string[] strList2 = new string[wordsArr2.Length];
    // string finalString = string.Empty;

    // encrypt
    for (int i = 0; i < wordsArr.Length; i++) {
        int firstLetter = wordsArr[i][0];
        string secondLetter = wordsArr[i][^1].ToString(); // (is actually last letter)
        string lastLetter = wordsArr[i][1].ToString(); // (is actually 2nd letter)
        StringBuilder encryptedWord = new();

        for (int j = 0; j < wordsArr[i].Length; j++)
        {
            if (j == 0) { encryptedWord.Append(firstLetter); }
            else if (j == 1) { encryptedWord.Append(secondLetter); }
            else if (j == wordsArr[i].Length - 1) { encryptedWord.Append(lastLetter); }
            else { encryptedWord.Append(wordsArr[i][j]); }
        }

        strList[i] = encryptedWord.ToString();
        //finalString = string.Join(" ", strList);
    }

    // decrypt
    // if (input2 != string.Empty) { 
    // for (int i = 0; i < wordsArr2.Length; i++) {
    //     int firstLetter = 0;
    //     string secondLetter = wordsArr2[i][^1].ToString();
    //     string nums = "";
    //     StringBuilder decryptedWord = new();

    //     for (int j = 0; j < wordsArr2[i].Length; j++){
    //         if (!char.IsLetter(wordsArr2[i][j])) {
    //             firstLetter++;
    //         }
    //     }
    //     for (int k = 0; k < firstLetter; k++){
    //         nums += wordsArr2[i][k];
    //     }
    //     for (int l = 0; l < wordsArr2[i].Length; l++){
    //         if (l == 0) { decryptedWord.Append((char)(int.Parse(nums))); }
    //         else if (l == 1) { decryptedWord.Append(secondLetter); }
    //         else if (l == wordsArr2[i].Length - 1) { decryptedWord.Append(wordsArr2[i][firstLetter]);}
    //         else if (l > 2) { decryptedWord.Append(wordsArr2[i][l]);}
    //     }

    //     strList2[i] = decryptedWord.ToString();
    // }
    //     finalString += " " + string.Join(" ", strList2);

    //     return finalString;
    // }

    return string.Join("", strList);
}
